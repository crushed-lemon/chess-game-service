name: Deploy to Fargate

on:
  push:
    branches:
      - main

env:
  AWS_REGION: eu-north-1
  ECR_REPOSITORY: chess-game-service-registry
  ECS_CLUSTER_NAME: ChessGameProdCluster
  ECS_SERVICE_NAME: chess-game-service-task-service-vepx2sul
  CONTAINER_NAME: chess-game-service-container

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Build app with Maven
        run: mvn clean package -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push Docker image
        run: |
          IMAGE_TAG=$(date +%s)
          IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG"
          docker build -t $IMAGE_URI .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

      - name: Get current task definition
        id: task-def
        run: |
          aws ecs describe-services --cluster $ECS_CLUSTER_NAME --services $ECS_SERVICE_NAME \
            --query "services[0].taskDefinition" --output text > task_def_arn.txt
          TASK_DEF_ARN=$(cat task_def_arn.txt)
          aws ecs describe-task-definition --task-definition $TASK_DEF_ARN \
            --query "taskDefinition" > task_def.json

      - name: Debug new task definition
        run: cat task_def.json

      - name: Register new task definition with updated image
        run: |
          NEW_IMAGE=$IMAGE_URI
          jq --arg IMAGE "$NEW_IMAGE" \
            --arg ROLE_ARN "arn:aws:iam::610596007825:role/ecsTaskExecutionRole" \
            '.containerDefinitions[0].image = $IMAGE |
             { family, executionRoleArn, networkMode, containerDefinitions, requiresCompatibilities, cpu, memory }' \
            task_def.json > new_task_def.json

          cat task_def.json

          aws ecs register-task-definition --cli-input-json file://new_task_def.json \
            --query "taskDefinition.taskDefinitionArn" --output text > new_task_def_arn.txt

      - name: Update ECS service to use new task definition
        run: |
          NEW_TASK_DEF_ARN=$(cat new_task_def_arn.txt)
          aws ecs update-service \
            --cluster $ECS_CLUSTER_NAME \
            --service $ECS_SERVICE_NAME \
            --task-definition $NEW_TASK_DEF_ARN \
            --force-new-deployment